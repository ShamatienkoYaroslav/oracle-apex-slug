-- CREATE PACKAGE

prompt *** Packages ***

CREATE OR REPLACE PACKAGE {{pkg_name}} AS
    SUBTYPE slug_varchar IS VARCHAR2(32767);
    
    FUNCTION slugify ( string_in IN slug_varchar ) RETURN slug_varchar;

END {{pkg_name}};
/

CREATE OR REPLACE PACKAGE BODY {{pkg_name}} AS

    -- ******** PRIVATE ********
    
    function get_latin_symbols_for_cyrillic (cyrillic_symbol_in in {{table_name}}.CYRILLIC_SYMBOL%type) 
    return {{table_name}}.LATIN_SYMBOLS%type
    is
        l_exist NUMBER := 0;
        l_latin_symbols {{table_name}}.LATIN_SYMBOLS%type := null;
    begin
        select count(*) into l_exist from {{table_name}} 
            where CYRILLIC_SYMBOL = cyrillic_symbol_in;
        if l_exist = 0 then
            l_latin_symbols := cyrillic_symbol_in;
        else
            begin
                select LATIN_SYMBOLS into l_latin_symbols from {{table_name}} where CYRILLIC_SYMBOL = cyrillic_symbol_in;
                EXCEPTION
                    when no_data_found then
                        l_latin_symbols := null;
            end;
        end if;
        return l_latin_symbols;
    end;

    -- ******** PUBLIC ********
    
    FUNCTION slugify ( string_in IN slug_varchar ) RETURN slug_varchar
        is
        l_string slug_varchar := string_in;
        l_string_index NUMBER := 1;
        l_substring {{table_name}}.CYRILLIC_SYMBOL%type;
        l_latin_symbols {{table_name}}.LATIN_SYMBOLS%type := null;
        l_parsed_string slug_varchar := '';
    BEGIN
        l_string := regexp_replace(l_string, '[[:space:]]+', '-');
        while (l_string_index <= length(l_string))
        loop
            l_substring := SUBSTR(l_string, l_string_index, 1);
            
            l_latin_symbols := get_latin_symbols_for_cyrillic(cyrillic_symbol_in => l_substring);
            
            if l_latin_symbols is not null then
                l_parsed_string := l_parsed_string || l_latin_symbols;
            end if;
            
            l_string_index := l_string_index + 1;
        end loop;
        return l_parsed_string;
    END;

END {{pkg_name}};
/